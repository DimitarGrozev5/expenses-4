// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    mainAccountId String?         @unique
    mainAccount   ExpenseAccount? @relation("MainAccount", fields: [mainAccountId], references: [id], onDelete: NoAction, onUpdate: NoAction)

    lastPeriodStart DateTime @default(now())

    accounts       Account[]
    sessions       Session[]
    ExpenseAccount ExpenseAccount[] @relation("ExpenseAccountForUser")
    BudgetCategory BudgetCategory[]
    Expense        Expense[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model ExpenseAccount {
    id String @id @default(cuid())

    userId String
    user   User   @relation("ExpenseAccountForUser", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    name         String
    initAmount   Decimal @default(0)
    credit       Decimal @default(0)
    accountOrder Int

    mainAccountForUser User? @relation("MainAccount")

    @@index([userId])
}

model BudgetCategory {
    id String @id @default(cuid())

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    name                String
    montlyInput         Decimal
    startOfPeriodAmount Decimal
    categoryOrder       Int
    trackDaily          Boolean

    expenses Expense[]

    @@index([userId])
}

model Expense {
    id String @id @default(cuid())

    createdOn DateTime

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    categoryId String
    category   BudgetCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    amount  Decimal
    reasons ReasonOnExpense[]

    @@index([userId])
    @@index([categoryId])
}

model ReasonOnExpense {
    id String @id @default(cuid())

    expenseId String
    expense   Expense @relation(fields: [expenseId], references: [id])

    reasonId String
    reason   Reason @relation(fields: [reasonId], references: [id])

    @@index([expenseId])
    @@index([reasonId])
}

model Reason {
    id        String @id @default(cuid())
    timesUsed Int    @default(0)

    tag String @unique

    ReasonOnExpense ReasonOnExpense[]
}
